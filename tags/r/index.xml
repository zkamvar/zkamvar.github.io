<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Zhian N. Kamvar</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Zhian N. Kamvar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I C Bugs</title>
      <link>/blog/i-c-bugs/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/i-c-bugs/</guid>
      <description>A Brown marmorated stink bug female from a laboratory colony on a common bean leaf, photographed in the laboratory of Fondazione Edmund Mach, Italy.
URL: https://commons.wikimedia.org/wiki/File:Halyomorpha_halys_lab.jpg   Occasionally, I hear people complain about the strict policies of CRAN, but I for one quite apprecieate them, especially when dealing with hidden errors in compiled code.
Not twenty-four hours after I had submitted poppr version 2.6.0 to CRAN did I receive an email from none other than Brian D.</description>
    </item>
    
    <item>
      <title>Poppr 2.6.0: Better Network Plotting</title>
      <link>/blog/poppr-2-6-0-better-network-plotting/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/poppr-2-6-0-better-network-plotting/</guid>
      <description>Poppr version 2.6.0 has officially been released on CRAN and should be built for all operating systems within the next few days ðŸŽ‰. You can check out the NEWS for full details. This release features a new function called boot.ia() to assess how the Index of Association responds to repeat observations (clones). Perhaps the biggest feature is the change in how minimum spanning networks are plotted.
Minimum spanning networks were originally implemented in poppr by Javier Tabima and I, and since then theyâ€™ve gone through some tweaking, eventually including features like reticulation of equivalent paths and a GUI to help construct these networks.</description>
    </item>
    
    <item>
      <title>Using a custom library in R</title>
      <link>/blog/using-a-custom-library-in-r/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/using-a-custom-library-in-r/</guid>
      <description>Iâ€™ve been using a custom library for R since 2012 and Iâ€™ve never looked back. Iâ€™ve not seen many tutorials for people do do this through R, so I figured Iâ€™d write a quick one.
Where does your R package library live? You can usually find this out by typing .libPaths() in your R console. If you have an out-of-the-box installation, it will generally be somewhere like:
C:/Program Files/R/R-3.4.2/library or</description>
    </item>
    
  </channel>
</rss>